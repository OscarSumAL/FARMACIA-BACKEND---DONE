// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Usuario {
  id        String   @id @default(cuid())
  email     String   @unique
  nombre    String
  password  String
  role      String   @default("ADMIN")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Producto {
  id               Int            @id @default(autoincrement())
  nombre           String
  descripcion      String?
  precio           Float
  stock            Int            @default(0)
  stockMinimo       Int            @default(5)
  categoria        String
  fechaVencimiento DateTime?
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  ventas           DetalleVenta[]
}

model Cliente {
  id        Int      @id @default(autoincrement())
  nombre    String
  documento String   @unique
  telefono  String?
  email     String?  @unique
  direccion String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ventas    Venta[]
}

model Venta {
  id            Int            @id @default(autoincrement())
  total         Float
  metodoPago    String
  documento     String
  fecha         DateTime       @default(now())
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  cliente       Cliente        @relation(fields: [documento], references: [documento])
  productos     DetalleVenta[]
}

model DetalleVenta {
  id         Int      @id @default(autoincrement())
  ventaId    Int
  productoId Int
  cantidad   Int
  precio     Float
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  venta      Venta    @relation(fields: [ventaId], references: [id])
  producto   Producto @relation(fields: [productoId], references: [id])
}
